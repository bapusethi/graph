require 'sqlite3'

# Open a SQLite 3 database file
db = SQLite3::Database.new 'spec/db/graph.db'

db.execute <<-SQL
  DROP TABLE connections;
SQL


# Create a table
result = db.execute <<-SQL
  CREATE TABLE connections (
   id int NOT NULL,
   graph_id int,
   source_id int,
   edge_id int,
   destination_id int,
   PRIMARY KEY  (id)
);
SQL

[[1,1,1,1,3],[2,1,1,5,2],[3,1,2,3,4],[4,1,2,4,6],
[5,1,3,5,3],[6,1,3,6,4],[7,1,4,7,6],[8,1,4,8,1],
[9,1,5,9,3],[10,1,5,10,2],[11,1,6,11,3]].each do |pair|
  db.execute 'insert into connections values (?,?, ?,?,?)', pair[0],pair[1],pair[2],pair[3],pair[4],pair[5]
end

# Find some records
db.execute 'SELECT * FROM connections' do |row|
  p row
end


result = db.execute <<-SQL
CREATE TABLE nodes (
  name varchar(255),
  id int NOT NULL ,
  PRIMARY KEY  (id)
);
SQL


{ 'Node 1' => 1, 'Node 2' => 2, 'Node 3' => 3, 'Node 4' => 4, 'Node 5' => 5, 'Node 6' => 6 }.each do |pair|
  db.execute 'insert into nodes values (?, ?)', pair
end



result = db.execute <<-SQL
CREATE TABLE edges (
  name varchar(255),
  id int NOT NULL,
  PRIMARY KEY  (id)
);
SQL

{ 'Edge 1' => 1, 'Edge 2' => 2, 'Edge 3' => 3, 'Edge 4' => 4, 'Edge 5' => 5, 'Edge 6' => 6, 'Edge 7' => 7, 'Edge 8' => 8, 'Edge 9' => 9, 'Edge 10' => 10, 'Edge 11' => 11 }.each do |pair|
  db.execute 'insert into edges values (?, ?)', pair
end



